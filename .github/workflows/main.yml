name: Build

on:
  push:
    branches: "**"
  pull_request:
    branches: ["main"]
    types: [opened, reopened, edited, synchronize]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9, '3.10']

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Install dependencies
        run: |
          poetry install
      - name: Lint with flake8
        run: |
          poetry run flake8 pycardano
      - name: Run unit tests
        run: |
          poetry run pytest --doctest-modules --ignore=examples --cov=pycardano --cov-config=.coveragerc --cov-report=xml
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true

  continuous-integration:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Run integration tests
        run: |
          cd integration-test && ./run_tests.sh

      - name: Dump docker logs
        if: failure()
        run: |
          cd integration-test && docker-compose logs --no-color > integration-test.log

      - name: Upload integration-test.log
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: integration-test.log
          path: integration-test/integration-test.log